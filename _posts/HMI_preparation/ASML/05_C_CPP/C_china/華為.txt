
* 華為筆試題
1.寫出判斷ABCD四個表達式的是否正確, 若正確, 寫出經過表達式中 a的值(3分)
int a = 4;
(A)a += (a++); (B) a += (++a) ;(C) (a++) += a;(D) (++a) += (a++);
a = ?
答：C錯誤，左側不是一個有效變量，不能賦值，可改為(++a) += a;
改後答案依次為9,10,10,11

2.某32位系統下, C++程序，請計算sizeof 的值(5分).
char str[] = “http://www.ibegroup.com/”
char *p = str ;
int n = 10;
請計算
sizeof (str ) = ？（1）
sizeof ( p ) = ？（2）
sizeof ( n ) = ？（3）
void Foo ( char str[100]){
請計算
sizeof( str ) = ？（4）
}
void *p = malloc( 100 );
請計算
sizeof ( p ) = ？（5）
答：（1）17 （2）4 （3） 4 （4）4 （5）4

3. 回答下面的問題. (4分)
(1).頭文件中的 ifndef/define/endif 幹什?用？預處理
答：防止頭文件被重復引用
(2). ＃i nclude 和 ＃i nclude “filename.h” 有什?區別？
答：前者用來包含開發環境提供的庫頭文件，後者用來包含自己編寫的頭文件。
(3).在C++ 程序中調用被 C 編譯器編譯後的函數，為什?要加 extern “C”聲明？
答：函數和變量被C++編譯後在符號庫中的名字與C語言的不同，被extern "C"修飾的變
量和函數是按照C語言方式編譯和連接的。由於編譯後的名字不同，C++程序不能直接調
用C 函數。C++提供了一個C 連接交換指定符號extern“C”來解決這個問題。
(4). switch()中不允許的數據類型是?
答：實型

4. 回答下面的問題(6分)
(1).Void GetMemory(char **p, int num){
*p = (char *)malloc(num);
}
void Test(void){
char *str = NULL;
GetMemory(&str, 100);
strcpy(str, "hello");
printf(str);
}
請問運行Test 函數會有什?樣的結果？
答：輸出“hello”
(2). void Test(void){
char *str = (char *) malloc(100);
strcpy(str, “hello”);
free(str);
if(str != NULL){
strcpy(str, “world”);
printf(str);
}
}
請問運行Test 函數會有什?樣的結果？
答：輸出“world”
(3). char *GetMemory(void){
char p[] = "hello world";
return p;
}
void Test(void){
char *str = NULL;
str = GetMemory();
printf(str);
}
請問運行Test 函數會有什?樣的結果？
答：無效的指針，輸出不確定

5. 編寫strcat函數(6分)
已知strcat函數的原型是char *strcat (char *strDest, const char *strSrc);
其中strDest 是目的字符串，strSrc 是源字符串。
（1）不調用C++/C 的字符串庫函數，請編寫函數 strcat
答：
VC源碼：
char * __cdecl strcat (char * dst, const char * src)
{
char * cp = dst;
while( *cp )
cp++; /* find end of dst */
while( *cp++ = *src++ ) ; /* Copy src to end of dst */
return( dst ); /* return dst */
}
（2）strcat能把strSrc 的內容連接到strDest，為什?還要char * 類型的返回值？
答：方便賦值給其他變量

6.MFC中CString是類型安全類?？
答：不是，其它數據類型轉換到CString可以使用CString的成員函數Format來轉換

7.C++中為什?用模板類。
答：(1)可用來創建動態增長和減小的數據結構
（2）它是類型無關的，因此具有很高的可復用性。
（3）它在編譯時而不是運行時檢查數據類型，保證了類型安全
（4）它是平臺無關的，可移植性
（5）可用於基本數據類型

8.CSingleLock是幹什?的。
答：同步多個線程對一個數據類的同時訪問

9.NEWTEXTMETRIC 是什?。
答：物理字體結構，用來設置字體的高寬大小

10.程序什?時候應該使用線程，什?時候單線程效率高。
答：1．耗時的操作使用線程，提高應用程序響應
2．並行操作時使用線程，如C/S架構的服務器端並發線程響應用戶的請求。
3．多CPU系統中，使用線程提高CPU利用率
4．改善程序結構。一個既長又復雜的進程可以考慮分為多個線程，成為幾個獨立或半獨
立的運行部分，這樣的程序會利於理解和修改。
其他情況都使用單線程。

11.Windows是內核級線程?。
答：見下一題

12.Linux有內核級線程?。
答：線程通常被定義為一個進程中代碼的不同執行路線。從實現方式上劃分，線程有兩
種類型：“用戶級線程”和“內核級線程”。 用戶線程指不需要內核支持而在用戶程序
中實現的線程，其不依賴於操作系統核心，應用進程利用線程庫提供創建、同步、調度
和管理線程的函數來控制用戶線程。這種線程甚至在象 DOS 這樣的操作系統中也可實現
，但線程的調度需要用戶程序完成，這有些類似 Windows 3.x 的協作式多任務。另外一
種則需要內核的參與，由內核完成線程的調度。其依賴於操作系統核心，由內核的內部
需求進行創建和撤銷，這兩種模型各有其好處和缺點。用戶線程不需要額外的內核開支
，並且用戶態線程的實現方式可以被定制或修改以適應特殊應用的要求，但是當一個線
程因 I/O 而處於等待狀態時，整個進程就會被調度程序切換為等待狀態，其他線程得不
到運行的機會；而內核線程則沒有各個限制，有利於發揮多處理器的並發優勢，但卻占
用了更多的系統開支。
Windows NT和OS/2支持內核線程。Linux 支持內核級的多線程

13.C++中什?數據分配在棧或堆中，New分配數據是在近堆還是遠堆中？
答：棧: 存放局部變量，函數調用參數,函數返回值，函數返回地址。由系統管理
堆: 程序運行時動態申請，new 和　malloc申請的內存就在堆上

14.使用線程是如何防止出現大的波峰。
答：意思是如何防止同時產生大量的線程，方法是使用線程池，線程池具有可以同時提
高調度效率和限制資源使用的好處，線程池中的線程達到最大數時，其他線程就會排隊
等候。

15函數模板與類模板有什?區別？
答：函數模板的實例化是由編譯程序在處理函數調用時自動完成的，而類模板的實例化
必須由程序員在程序中顯式地指定。

16一般數據庫若出現日誌滿了，會出現什?情況，是否還能使用？
答：只能執行查詢等讀操作，不能執行更改，備份等寫操作，原因是任何寫操作都要記
錄日誌。也就是說基本上處於不能使用的狀態。

17 SQL Server是否支持行級鎖，有什?好處？
答：支持，設立封鎖機制主要是為了對並發操作進行控制，對幹擾進行封鎖，保證數據
的一致性和準確性，行級封鎖確保在用戶取得被更新的行到該行進行更新這段時間內不
被其它用戶所修改。因而行級鎖即可保證數據的一致性又能提高數據操作的迸發性。

18如果數據庫滿了會出現什?情況，是否還能使用？
答：見16

19 關於內存對齊的問題以及sizof()的輸出
答：編譯器自動對齊的原因：為了提高程序的性能，數據結構（尤其是棧）應該盡可能
地在自然邊界上對齊。原因在於，為了訪問未對齊的內存，處理器需要作兩次內存訪問
；然而，對齊的內存訪問僅需要一次訪問。

20 int i=10, j=10, k=3; k*=i+j; k最後的值是？
答：60，此題考察優先級，實際寫成： k*=(i+j);，賦值運算符優先級最低

21.對數據庫的一張表進行操作,同時要對另一張表進行操作,如何實現?
答：將操作多個表的操作放入到事務中進行處理

22.TCP/IP 建立連接的過程?(3-way shake)
答：在TCP/IP協議中，TCP協議提供可靠的連接服務，采用三次握手建立一個連接。
　　第一次握手：建立連接時，客戶端發送syn包(syn=j)到服務器，並進入SYN_SEND狀
態，等待服務器確認；
第二次握手：服務器收到syn包，必須確認客戶的SYN（ack=j+1），同時自己也發送一個
SYN包（syn=k），即SYN+ACK包，此時服務器進入SYN_RECV狀態；
　　第三次握手：客戶端收到服務器的SYN＋ACK包，向服務器發送確認包ACK(ack=k+1)
，此包發送完畢，客戶端和服務器進入ESTABLISHED狀態，完成三次握手。

23.ICMP是什?協議,處於哪一層?
答：Internet控制報文協議，處於網絡層（IP層）

24.觸發器怎?工作的?
答：觸發器主要是通過事件進行觸發而被執行的，當對某一表進行諸如UPDATE、 INSERT
、 DELETE 這些操作時，數據庫就會自動執行觸發器所定義的SQL 語句，從而確保對數
據的處理必須符合由這些SQL 語句所定義的規則。

25.winsock建立連接的主要實現步驟?
答：服務器端：socker()建立套接字，綁定（bind）並監聽（listen），用accept（）
等待客戶端連接。
客戶端：socker()建立套接字，連接（connect）服務器，連接上後使用send()和recv（
），在套接字上寫讀數據，直至數據交換完畢，closesocket()關閉套接字。
服務器端：accept（）發現有客戶端連接，建立一個新的套接字，自身重新開始等待連
接。該新產生的套接字使用send()和recv（）寫讀數據，直至數據交換完畢，closesock
et()關閉套接字。

26.動態連接庫的兩種方式?
答：調用一個DLL中的函數有兩種方法：
1．載入時動態鏈接（load-time dynamic linking），模塊非常明確調用某個導出函數
，使得他們就像本地函數一樣。這需要鏈接時鏈接那些函數所在DLL的導入庫，導入庫向
系統提供了載入DLL時所需的信息及DLL函數定位。
2．運行時動態鏈接（run-time dynamic linking），運行時可以通過LoadLibrary或Loa
dLibraryEx函數載入DLL。DLL載入後，模塊可以通過調用GetProcAddress獲取DLL函數的
出口地址，然後就可以通過返回的函數指針調用DLL函數了。如此即可避免導入庫文件了
。

27.IP組播有那些好處?
答：Internet上產生的許多新的應用，特別是高帶寬的多媒體應用，帶來了帶寬的急劇
消耗和網絡擁擠問題。組播是一種允許一個或多個發送者（組播源）發送單一的數據包
到多個接收者（一次的，同時的）的網絡技術。組播可以大大的節省網絡帶寬，因為無
論有多少個目標地址，在整個網絡的任何一條鏈路上只傳送單一的數據包。所以說組播
技術的核心就是針對如何節約網絡資源的前提下保證服務質量。

* Sec 
1.static有什?用途？（請至少說明兩種）
    1)在函數體，一個被聲明為靜態的變量在這一函數被調用過程中維持其值不變。
    2) 在模塊內（但在函數體外），一個被聲明為靜態的變量可以被模塊內所用函數訪問，但不能被模塊外其它函數訪問。它是一個本地的全局變量。
    3) 在模塊內，一個被聲明為靜態的函數只可被這一模塊內的其它函數調用。那就是，這個函數被限制在聲明它的模塊的本地範圍內使用

2.引用與指針有什?區別？
    1) 引用必須被初始化，指針不必。
    2) 引用初始化以後不能被改變，指針可以改變所指的對象。
    3) 不存在指向空值的引用，但是存在指向空值的指針。

3.描述實時系統的基本特性
       在特定時間內完成特定的任務，實時性與可靠性。

4.全局變量和局部變量在內存中是否有區別？如果有，是什?區別？
      全局變量儲存在靜態數據庫，局部變量在堆棧。
      global : heap 
      local : stack

5.什?是平衡二叉樹？
      左右子樹都是平衡二叉樹 且左右子樹的深度差值的絕對值不大於1。

6.堆棧溢出一般是由什?原因導致的？
      沒有回收垃圾資源。

7.什?函數不能聲明為虛函數？
      constructor函數不能聲明為 virtual function

8.冒泡排序算法的時間復雜度是什?？
      時間復雜度是O(n^2)。

9.寫出float x 與“零值”比較的if語句。
      if(x>0.000001&&x<-0.000001)

10.Internet采用哪種網絡協議？該協議的主要層次結構？
      Tcp/Ip協議
      主要層次結構為： 應用層/傳輸層/網絡層/數據鏈路層/物理層。

11.Internet物理地址和IP地址轉換采用什?協議？
      ARP (Address Resolution Protocol)（地址解析協議）

12.IP地址的編碼分為哪倆部分？
     IP地址由兩部分組成，網絡號和主機號。不過是要和“子網掩碼”按位與上之後才能區分哪些是網絡位哪些是主機位。
     IP : 
     +1) 主機號
     +2) 網路號

13.用戶輸入M,N值，從1至N開始順序循環數數，每數到M輸出該數值，直至全部輸出。寫出C程序。
     循環鏈表，用取余操作做

14.不能做switch()的參數類型是：
     switch的參數不能為實型。

* 華為
1、局部變量能否和全局變量重名？
     答：能，局部會屏蔽全局。要用全局變量，需要使用"::"
局部變量可以與全局變量同名，在函數內引用這個變量時，會用到同名的局部變量，而不會用到全局變量。對於有些編譯器而言，在同一個函數內可以定義多個同名的局部變量，比如在兩個循環體內都定義一個同名的局部變量，而那個局部變量的作用域就在那個循環體內。

2、如何引用一個已經定義過的全局變量？
     答：extern
     可以用引用頭文件的方式，也可以用extern關鍵字，如果用引用頭文件方式來引用某個在頭文件中聲明的全局變理，假定你將那個變寫錯了，那?在編譯期間會報錯，如果你用extern方式引用時，假定你犯了同樣的錯誤，那?在編譯期間不會報錯，而在連接期間報錯。

3、全局變量可不可以定義在可被多個.C文件包含的頭文件中？為什?？
    答：可以，在不同的C文件中以static形式來聲明同名全局變量。
    可以在不同的C文件中聲明同名的全局變量，前提是其中只能有一個C文件中對此變量賦初值，此時連接不會出錯。

4、語句for( ；1 ；)有什?問題？它是什?意思？
    答：無限循環，和while(1)相同。

5、do……while和while……do有什?區別？
    答：前一個循環一遍再判斷，後一個判斷以後再循環。

6、請寫出下列代碼的輸出內容
＃i nclude<stdio.h>
main()
{
int a,b,c,d;
a=10;
b=a++;
c=++a;
d=10*a++;
printf("b，c，d：%d，%d，%d"，b，c，d）;
return 0;
}
答：10，12，120

1、static全局變量與普通的全局變量有什?區別？static局部變量和普通局部變量有什?區別？static函數與普通函數有什?區別？
    答：全局變量(外部變量)的說明之前再冠以static 就構成了靜態的全局變量。全局變量本身就是靜態存儲方式， 靜態全局變量當然也是靜態存儲方式。 這兩者在存儲方式上並無不同。這兩者的區別雖在於非靜態全局變量的作用域是整個源程序， 當一個源程序由多個源文件組成時，非靜態的全局變量在各個源文件中都是有效的。 而靜態全局變量則限制了其作用域， 即只在定義該變量的源文件內有效， 在同一源程序的其它源文件中不能使用它。由於靜態全局變量的作用域局限於一個源文件內，只能為該源文件內的函數公用， 因此可以避免在其它源文件中引起錯誤。
    從以上分析可以看出， 把局部變量改變為靜態變量後是改變了它的存儲方式即改變了它的生存期。把全局變量改變為靜態變量後是改變了它的作用域， 限制了它的使用範圍。
    static函數與普通函數作用域不同。僅在本文件。只在當前源文件中使用的函數應該說明為內部函數(static)，內部函數應該在當前源文件中說明和定義。對於可在當前源文件以外使用的函數，應該在一個頭文件中說明，要使用這些函數的源文件要包含這個頭文件
    static全局變量與普通的全局變量有什?區別：static全局變量只初使化一次，防止在其他文件單元中被引用;
    static局部變量和普通局部變量有什?區別：static局部變量只被初始化一次，下一次依據上一次結果值；
    static函數與普通函數有什?區別：static函數在內存中只有一份，普通函數在每個被調用中維持一份拷貝

2、程序的局部變量存在於（堆棧）中，全局變量存在於（靜態區 ）中，動態申請數據存在於（ 堆）中。

3、設有以下說明和定義：
typedef union {long i; int k[5]; char c;} DATE;
struct data { int cat; DATE cow; double dog;} too;
DATE max;
則語句 printf("%d",sizeof(struct date)+sizeof(max));的執行結果是：___52____
    答：DATE是一個union, 變量公用空間. 裏面最大的變量類型是int[5], 占用20個字節. 所以它的大小是20
data是一個struct, 每個變量分開占用空間. 依次為int4 + DATE20 + double8 = 32.
所以結果是 20 + 32 = 52.
當然...在某些16位編輯器下, int可能是2字節,那?結果是 int2 + DATE10 + double8 = 20

4、隊列和棧有什?區別？
    隊列先進先出，棧後進先出

5、寫出下列代碼的輸出內容
＃i nclude<stdio.h>
int inc(int a)
{
return(++a);
}
int multi(int*a,int*b,int*c)
{
return(*c=*a**b);
}
typedef int(FUNC1)(int in);
typedef int(FUNC2) (int*,int*,int*);

void show(FUNC2 fun,int arg1, int*arg2)
{
INCp=&inc;
int temp =p(arg1);
fun(&temp,&arg1, arg2);
printf("%d\n",*arg2);
}

main()
{
int a;
show(multi,10,&a);
return 0;
}
答：110
7、請找出下面代碼中的所以錯誤
說明：以下代碼是把一個字符串倒序，如“abcd”倒序後變為“dcba”

1、＃i nclude"string.h"
2、main()
3、{
4、 char*src="hello,world";
5、 char* dest=NULL;
6、 int len=strlen(src);
7、 dest=(char*)malloc(len);
8、 char* d=dest;
9、 char* s=src[len];
10、 while(len--!=0)
11、 d++=s--;
12、 printf("%s",dest);
13、 return 0;
14、}
答：
方法1：
int main(){
char* src = "hello,world";
int len = strlen(src);
char* dest = (char*)malloc(len+1);//要為\0分配一個空間
char* d = dest;
char* s = &src[len-1];//指向最後一個字符
while( len-- != 0 )
*d++=*s--;
*d = 0;//尾部要加\0
printf("%s\n",dest);
free(dest);// 使用完，應當釋放空間，以免造成內存匯泄露
return 0;
}
方法2：
＃i nclude <stdio.h>
＃i nclude <string.h>
main()
{
char str[]="hello,world";
int len=strlen(str);
char t;
for(int i=0; i<len/2; i++)
{
t=str[i];
str[i]=str[len-i-1]; str[len-i-1]=t;
}
printf("%s",str);
return 0;
}
1.-1,2,7,28,,126請問28和126中間那個數是什?？為什?？
第一題的答案應該是4^3-1=63
規律是n^3-1(當n為偶數0，2，4)
      n^3+1(當n為奇數1，3，5)
答案：63
2.用兩個棧實現一個隊列的功能？要求給出算法和思路！
設2個棧為A,B, 一開始均為空.

入隊:
將新元素push入棧A;

出隊:
(1)判斷棧B是否為空；
(2)如果不為空，則將棧A中所有元素依次pop出並push到棧B；
(3)將棧B的棧頂元素pop出；

這樣實現的隊列入隊和出隊的平攤復雜度都還是O(1), 比上面的幾種方法要好。3.在c語言庫函數中將一個字符轉換成整型的函數是atool()嗎，這個函數的原型是什?？
函數名: atol
功 能: 把字符串轉換成長整型數
用 法: long atol(const char *nptr);
程序例:
＃i nclude <stdlib.h>
＃i nclude <stdio.h>
int main(void)
{
long l;
char *str = "98765432";

l = atol(lstr);
printf("string = %s integer = %ld\n", str, l);
return(0);
}

2.對於一個頻繁使用的短小函數,在C語言中應用什?實現,在C++中應用什?實現?
c用宏定義，c++用inline
  3.直接鏈接兩個信令點的一組鏈路稱作什??
PPP點到點連接
  4.接入網用的是什?接口?
  5.voip都用了那些協議?
  6.軟件測試都有那些種類?
黑盒：針對系統功能的測試    白合：測試函數功能，各函數接口
  7.確定模塊的功能和模塊的接口是在軟件設計的那個隊段完成的?
概要設計階段
  8.enum string
    {
    x1,
    x2,
    x3=10,
    x4,
    x5,
    }x;
   問x= 0x801005，0x8010f4  ;
  9.unsigned char *p1;
    unsigned long *p2;
    p1=(unsigned char *)0x801000;
    p2=(unsigned long *)0x810000;
    請問p1+5=  ;
        p2+5=  ;
三.選擇題:
  1.Ethternet鏈接到Internet用到以下那個協議?
  A.HDLC;B.ARP;C.UDP;D.TCP;E.ID
  2.屬於網絡層協議的是:
  A.TCP;B.IP;C.ICMP;D.X.25
  3.Windows消息調度機制是:
  A.指令隊列;B.指令堆棧;C.消息隊列;D.消息堆棧;
  4.unsigned short hash(unsigned short key)
    {
      return (key>>)%256
    }
   請問hash(16),hash(256)的值分別是:
  A.1.16;B.8.32;C.4.16;D.1.32
四.找錯題:
  1.請問下面程序有什?錯誤?
   int a[60][250][1000],i,j,k;
   for(k=0;k<=1000;k++)
    for(j=0;j<250;j++)
     for(i=0;i<60;i++)
      a[i][j][k]=0;
把循環語句內外換一下
  2.#define Max_CB 500
    void LmiQueryCSmd(Struct MSgCB * pmsg)
     {
     unsigned char ucCmdNum;
     ......
   
     for(ucCmdNum=0;ucCmdNum<Max_CB;ucCmdNum++)
      {
      ......;
      }
死循環
   3.以下是求一個數的平方的程序,請找出錯誤:
    #define SQUARE(a)((a)*(a))
    int a=5;
    int b;
    b=SQUARE(a++);
   4.typedef unsigned char BYTE
     int examply_fun(BYTE gt_len; BYTE *gt_code)
      { 
      BYTE *gt_buf;
      gt_buf=(BYTE *)MALLOC(Max_GT_Length);
      ......
      if(gt_len>Max_GT_Length)
        {
        return GT_Length_ERROR; 
        }
        .......
      }
五.問答題:
   1.IP Phone的原理是什??
IPV6
   2.TCP/IP通信建立的過程怎樣，端口有什?作用？
三次握手，確定是哪個應用程序使用該協議
   3.1號信令和7號信令有什?區別，我國某前廣泛使用的是那一種？
   4.列舉5種以上的電話新業務？
